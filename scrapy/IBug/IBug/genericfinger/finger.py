# -*- coding: utf-8 -*-
import re
import json
class VendorProductFinger(object):
    __vendorproductdict = {
        ('Siemens',): (
                         ['Scalance Firewall'],
                         ['SIMATIC WinCC Flexible'],
                         ['SIMATIC HMI Panels'],
                         ['SIMATIC WinCC Sm@rtClient Lite for iOS'],
                         ['SIMATIC WinCC Sm@rtClient for IOS'],
                         ['SIMATIC WinCC','WinCC'],
                         ['SIMATIC PCS 7'],
                         ['SIMATIC STEP 7'],
                         ['TeleControl Server Basics'],
                         ['SIMATIC WinCC OA Operator iOS'],
                         ['S7-300','S7-300 CPU'],
                         ['S7-400','S7-400 CPU'],
                         ['S7-1200'],


                         ['EN100 Ethernet module included in SIPROTEC 4 and SIPROTEC Compact'],
                     ),
        ('Wind River System','Wind River System Inc.','Wind River Systems, Inc.'):(
                         ['VxWorks'],
                         ['windWeb'],
                         ['BSD/OS'],
                     ),

        ('Schneider Electric'): (
                         ['InduSoft Web Studio'],
                         ['ClearSCADA'],
        ),

        ('Rockwell Automation'): (
                         ['Micrologix 1100'],
                         ['Micrologix 1200', 'PLC Micrologix 1200'],
                         ['Micrologix 1400'],
        ),



        ('7-Technologies'): (
                         ['Interactive Graphical SCADA System','Igss'],
        ),

        ('Cogent Real-Time Systems','Cogent Real-Time Systems Inc.'): (
                         ['OPC DataHub'],
                         ['Cogent DataHub'],
                         ['Cascade DataHub'],
                         ['DataHub QuickTrend'],
                         ['DataHub'],
                         ['DataSim'],
                         ['DataPid'],
        ),

        ('3S - Smart Software Solutions','3ssoftware'): (
                         ['GmbH CoDeSys'],
                         ['CoDeSys Gateway Server'],
                         ['Codesys'],
                       ),

        ('Parallels'): (
                         ['Parallels Plesk Panel'],
                     ),

        ('Measuresoft'): (
                         ['ScadaPro'],
        ),
    }

    def getFinger(self, impactproducts):
        productdetaillist = []
        productdetaildict = {'vendor':None, 'product':None, 'version':None}
        for impactproduct in impactproducts:
            for keytuple in self.__vendorproductdict.keys():
                for vendor in keytuple[::-1]:
                    if re.search(vendor,impactproduct,re.IGNORECASE):
                        productdetaildict['vendor'] = keytuple[0]
                        for products in self.__vendorproductdict[keytuple]:
                            for product in products[::-1]:
                                if re.search(product,impactproduct,re.IGNORECASE):
                                    productdetaildict['product'] = products[0]
                                    productdetaildict['version'] = impactproduct.replace(vendor,'').replace(product,'').strip()
                                    break
                            if productdetaildict['product']:
                                break
                        break
                if productdetaildict['vendor']:
                    productdetaillist.append(productdetaildict)
                    productdetaildict = {'vendor': None, 'product': None, 'version': None}
                    break
        return productdetaillist

if __name__ == '__main__':
    impactproducts = ['Siemens Scalance Firewall S613 V2', 'Siemens Scalance Firewall S612 V2', 'Siemens Scalance Firewall S602 V2']
    productdetaillist = VendorProductFinger().getFinger(impactproducts)

    v_productdetaillist = json.dumps(productdetaillist, ensure_ascii=False)

    pass