#coding:utf8


import xlrd
from datetime import datetime
from xlrd import xldate_as_tuple

import os


class ExtractPrivateVlun(object):

    def __init__(self):
        self.excelfilepath = self.getexcelfilepath()
        self.workbook = xlrd.open_workbook(self.excelfilepath)

    def judgeexcelfile(self):
        """判断excel文件是否标准"""
        pass

    @staticmethod
    def getexcelfilepath():
        """获取excel文件的路径"""

        filedir = os.path.abspath(os.path.dirname(__file__))
        for root, dirs, files in os.walk(filedir):
            for fn in files:
                if 'private_vlun' in fn:
                    return os.path.join(root,fn)

    def getexcelinfolist(self):
        """获取excel文件信息并存储进数据库"""

        sheet = self.workbook.sheets()[0]           # 读取第一个sheet

        nrows = sheet.nrows                         # 行数
        # ncols = sheet.ncols                         # 列数

        first_row_values = sheet.row_values(0)      # 第一行数据
        privatevlunlist = []
        num = 1
        for row_num in range(1, nrows):
            # row_values = sheet.row_values(row_num)

            rowdict = {}

            for i in range(len(first_row_values)):
                ctype = sheet.cell(num, i).ctype
                cell = sheet.cell_value(num, i)

                if ctype == xlrd.XL_CELL_NUMBER:                    # 处理数值类型（包括浮点数）
                    cell = int(cell)                                # 转换成整型
                    cell = str(cell)

                elif ctype == xlrd.XL_CELL_DATE:                    # 处理日期类型
                    date = datetime(*xldate_as_tuple(cell, 0))
                    cell = date.strftime('%Y-%m-%d %H:%M:%S')

                elif ctype == xlrd.XL_CELL_BOOLEAN:                 # 处理布尔类型
                    cell = True if cell == 1 else False

                rowdict[first_row_values[i]] = cell
            privatevlunlist.append(rowdict)
            num = num + 1
        return privatevlunlist

if __name__ == '__main__':
    sfd = ExtractPrivateVlun()
    daf = sfd.getexcelinfolist()


